{"version":3,"file":"mcps-manage-dashboard.element-D5Kv5_fO.js","sources":["../../../Client/src/models/enums.ts","../../../Client/src/models/propagationSetting.ts","../../../Client/src/dashboards/mcps-manage-dashboard.element.ts"],"sourcesContent":["export enum PropagationRank {\r\n    Relevant = 'Relevant',\r\n    Newest = 'Newest',\r\n    MostPopular = 'MostPopular',\r\n}\r\n\r\nexport enum DuplicationStrategy {\r\n    UniquePage = 'UniquePage',\r\n    AllowDuplicates = 'AllowDuplicates',\r\n}\r\n","import { PropagationRank, DuplicationStrategy } from './enums';\r\n\r\nexport class PropagationSetting {\r\n    id?: number;\r\n    name?: string;\r\n    propagationPriority: PropagationRank[];\r\n    duplicationStrategy: DuplicationStrategy;\r\n    contentTypes?: string[];\r\n    propertyAlias?: string;\r\n    fallbackSetting?: PropagationSetting;\r\n\r\n    constructor(params: {\r\n        id?: number;\r\n        name?: string;\r\n        propagationPriority?: PropagationRank[];\r\n        duplicationStrategy?: DuplicationStrategy;\r\n        contentTypes?: string[];\r\n        propertyAlias?: string;\r\n        fallbackSetting?: PropagationSetting;\r\n    }) {\r\n        this.id = params.id;\r\n        this.name = params.name;\r\n        this.propagationPriority = params.propagationPriority ?? [\r\n            PropagationRank.Relevant,\r\n            PropagationRank.Newest,\r\n            PropagationRank.MostPopular,\r\n        ];\r\n        this.duplicationStrategy = params.duplicationStrategy ?? DuplicationStrategy.UniquePage;\r\n        this.contentTypes = params.contentTypes;\r\n        this.propertyAlias = params.propertyAlias;\r\n        this.fallbackSetting = params.fallbackSetting;\r\n    }\r\n}\r\n","import { UmbLitElement } from \"@umbraco-cms/backoffice/lit-element\";\r\nimport { html, css, customElement, state } from \"@umbraco-cms/backoffice/external/lit\";\r\nimport { type UmbCurrentUserModel, UMB_CURRENT_USER_CONTEXT } from \"@umbraco-cms/backoffice/current-user\";\r\nimport { UmbDataTypeDetailRepository } from \"@umbraco-cms/backoffice/data-type\"\r\nimport { PropagationSetting } from \"../models/propagationSetting\"\r\nimport { DuplicationStrategy, PropagationRank } from '../models/enums';\r\nimport { query } from \"@umbraco-cms/backoffice/external/lit\";\r\n\r\n\r\nimport {\r\n    UMB_MODAL_MANAGER_CONTEXT\r\n} from \"@umbraco-cms/backoffice/modal\";\r\nimport {\r\n    UMB_DATA_TYPE_PICKER_MODAL\r\n} from \"@umbraco-cms/backoffice/data-type\";\r\n\r\n\r\n@customElement('mcps-manage-dashboard-element')\r\nexport class McpsManageDashboardElement extends UmbLitElement {\r\n    #modalManagerContext?: typeof UMB_MODAL_MANAGER_CONTEXT.TYPE;\r\n\r\n    #datatypeRepository = new UmbDataTypeDetailRepository(this);\r\n\r\n    @state()\r\n    private _currentUser?: UmbCurrentUserModel;\r\n\r\n    @state()\r\n    private _filteredDocumentTypes: Array<{ name: string; alias: string, propertyTypes: Array<{ name: string }>; }> = [];\r\n\r\n    @state()\r\n    private _selectedDatatype?: string;\r\n\r\n    @state()\r\n    private _selectedDocTypes: string[] = [];\r\n\r\n    @state()\r\n    private _dataTypeId?: string;\r\n    @state()\r\n    private _userEmail?: string;\r\n\r\n    @state()\r\n    private _priority?: string;\r\n\r\n    @state()\r\n    private _duplicationStrategy?: string;\r\n\r\n    @state()\r\n    private _toastMessage: string = '';\r\n\r\n    @state()\r\n    private _toastColor: 'positive' | 'danger' = 'positive';\r\n\r\n    @state()\r\n    private _toastOpen: boolean = false;\r\n\r\n\r\n    @query('umb-property-editor-ui-document-type-picker')\r\n    private _docTypePickerElement!: UmbLitElement & { value: any };\r\n\r\n    constructor() {\r\n        super();\r\n        this.consumeContext(UMB_CURRENT_USER_CONTEXT, (instance) => {\r\n            this._observeCurrentUser(instance);\r\n        });\r\n        this.consumeContext(UMB_MODAL_MANAGER_CONTEXT, (instance) => {\r\n            this.#modalManagerContext = instance;\r\n        });\r\n    }\r\n\r\n    connectedCallback(): void {\r\n        super.connectedCallback();\r\n        this._fetchDocumentTypes();\r\n    }\r\n\r\n    private async _observeCurrentUser(instance: typeof UMB_CURRENT_USER_CONTEXT.TYPE) {\r\n        this.observe(instance.currentUser, (currentUser) => {\r\n            this._currentUser = currentUser;\r\n            this._userEmail = currentUser?.email ?? 'unknown';\r\n        });\r\n    }\r\n\r\n    private async _fetchDocumentTypes() {\r\n        try {\r\n            const response = await fetch('/mcps/api/documenttypes/all');\r\n            if (response.ok) {\r\n                const documentTypes = await response.json();\r\n                // Filter document types where the alias starts with \"mcps\"\r\n                this._filteredDocumentTypes = documentTypes\r\n                    .filter((doc: any) => doc.alias?.toLowerCase().startsWith(\"mcps\"))\r\n                    .map((doc: any) => ({\r\n                        name: doc.name,\r\n                        alias: doc.alias,\r\n                        propertyTypes: doc.propertyTypes?.map((prop: any) => ({\r\n                            name: prop.name\r\n                        })) ?? [],\r\n                    }));\r\n            } else {\r\n                console.error('Failed to fetch document types:', response.statusText);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching document types:', error);\r\n        }\r\n    }\r\n\r\n    private _onPriorityChange(event: Event) {\r\n        const target = event.target as HTMLSelectElement;\r\n        this._priority = target.value;\r\n    }\r\n\r\n    private _onDuplicationStrategyChange(event: Event) {\r\n        const target = event.target as HTMLSelectElement;\r\n        this._duplicationStrategy = target.value;\r\n    }\r\n\r\n    private _onDocTypePickerInput(event: Event) {\r\n\r\n        const picker = event.target as HTMLElement & { value: any };\r\n        const pickerString = picker.value as string;\r\n\r\n        if (picker && picker.value) {\r\n            this._selectedDocTypes = pickerString.split(\",\");\r\n        }\r\n    }\r\n\r\n    private mapPriority(priority: string): PropagationRank {\r\n        switch (priority) {\r\n            case 'MostPopular':\r\n                return PropagationRank.MostPopular;\r\n            case 'Relevant':\r\n                return PropagationRank.Relevant;\r\n            case 'Newest':\r\n                return PropagationRank.Newest;\r\n            default:\r\n                return PropagationRank.Relevant;\r\n        }\r\n    }\r\n\r\n    private mapDuplicationStrategy(strategy: string): DuplicationStrategy {\r\n        switch (strategy) {\r\n            case 'UniquePage':\r\n                return DuplicationStrategy.UniquePage;\r\n            default:\r\n                return DuplicationStrategy.UniquePage;\r\n        }\r\n    }\r\n\r\n    private _validateInputs(): string | null {\r\n        const missingFields: string[] = [];\r\n\r\n        if (!this._selectedDatatype) {\r\n            missingFields.push('Datatype');\r\n        }\r\n        if (!this._priority) {\r\n            missingFields.push('Priority');\r\n        }\r\n        if (!this._duplicationStrategy) {\r\n            missingFields.push('Duplication Strategy');\r\n        }\r\n        if (!this._selectedDocTypes.length) {\r\n            missingFields.push('Document Types');\r\n        }\r\n\r\n        if (missingFields.length > 0) {\r\n            return `Please select: ${missingFields.join(', ')}`;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n\r\n    private _openModal() {\r\n        const modalContext = this.#modalManagerContext?.open(this, UMB_DATA_TYPE_PICKER_MODAL, {\r\n            modal: {\r\n                type: 'sidebar',\r\n                size: 'small',\r\n            },\r\n        });\r\n        modalContext\r\n            ?.onSubmit()\r\n            .then((value) => {\r\n                this._dataTypeId = value.selection[0]!.toString();\r\n                var dt = value.selection[0]!.toString();\r\n                this.#datatypeRepository.requestByUnique(dt)\r\n                    .then((value2) => {\r\n                        this._selectedDatatype = value2.data?.name\r\n                    })\r\n                    .catch(() => undefined)\r\n            })\r\n            .catch(() => undefined);\r\n    }\r\n\r\n    private _showToast(message: string, color: 'positive' | 'danger') {\r\n        this._toastMessage = message;\r\n        this._toastColor = color;\r\n        this._toastOpen = true;\r\n\r\n        setTimeout(() => {\r\n            this._toastOpen = false;\r\n        }, 4000); // 4 seconds auto close\r\n    }\r\n\r\n\r\n\r\n    private _createDatatype = (event?: Event) => {\r\n        event?.preventDefault();\r\n\r\n        const validationError = this._validateInputs();\r\n        if (validationError) {\r\n            this._showToast(validationError, 'danger');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const propagationSetting = new PropagationSetting({\r\n                name: this._selectedDatatype ?? 'Unnamed',\r\n                propagationPriority: [this.mapPriority(this._priority ?? '')],\r\n                duplicationStrategy: this.mapDuplicationStrategy(this._duplicationStrategy ?? ''),\r\n                contentTypes: this._selectedDocTypes,\r\n                propertyAlias: this._selectedDatatype ?? 'unknown',\r\n            });\r\n\r\n            const apiUrl = `/mcps/api/rules/create/${this._userEmail}`;\r\n\r\n            fetch(apiUrl, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(propagationSetting),\r\n            })\r\n                .then(async (res) => {\r\n                    const text = await res.text();\r\n                    if (!res.ok) {\r\n                        this._showToast('Datatype creation failed!', 'danger')\r\n                        throw new Error(`Server error: ${res.status} - ${text}`);\r\n                    }\r\n                    this._showToast('Datatype created successfully!', 'positive');\r\n                })\r\n                .catch((error) => {\r\n                    this._showToast(`Error creating datatype: ${error.message}`, 'danger');\r\n                });\r\n\r\n        } catch (error) {\r\n            console.error('Unexpected error in _createDatatype:', error);\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        return html`\r\n\r\n<h1>Welcome ${this._currentUser?.name ?? \"Unknown\"}!</h1>\r\n</uui-modal-container>\r\n            <uui-box class=\"section\">\r\n                <p>This is the management dashboard. From here you can manage propagation of content and create new propagation blocks.</p>\r\n                <p>Modular Content Propagation System</p>\r\n            </uui-box>\r\n              \r\n            <div class=\"twoColumnLayout section\">\r\n                <uui-box class=\"halfWidth\">\r\n                    <h2>Create new propagation blocks</h2>\r\n                    <div>\r\n                    <b>Pick document type to propagate</b>\r\n                    <umb-property-editor-ui-document-type-picker @change=${this._onDocTypePickerInput}>\r\n                    <umb-input-document-type>\r\n                    <uui-ref-list>\r\n                    </uui-ref-list>\r\n                    <uui-button>\r\n                    </uui-button>\r\n                    </umb-input-document-type>\r\n                    </umb-property-editor-ui-document-type-picker>\r\n                    <div class=\"column mt2\">\r\n                    <b>Pick datatype to target content</b>\r\n                    <uui-button look=\"primary\" label=\"Add data type\" @click=${this._openModal}></uui-button>\r\n                    <div>Selected Datatype: ${this._selectedDatatype}</div>\r\n                    </div>\r\n                    <div class=\"dropdowns mt2\">\r\n                    <div>\r\n                    <b>Pick by which priority the content should be picked</b>\r\n  <select @change=${this._onPriorityChange}>\r\n  <option value=\"\">-- Select Priority --</option>\r\n  <option value=\"Relevant\">Relevant</option>\r\n  <option value=\"Newest\">Newest</option>\r\n  <option value=\"MostPopular\">MostPopular</option>\r\n</select>\r\n</div>\r\n<div>\r\n<b>Pick the strategy for how duplicates of content are shown on the site</b>\r\n<select @change=${this._onDuplicationStrategyChange}>\r\n  <option value=\"\">-- Select Strategy --</option>\r\n  <option value=\"UniquePage\">UniquePage</option>\r\n \r\n</select>\r\n </div>\r\n</div>\r\n<div class=\"column mt2\">\r\n                    <uui-button look=\"primary\" label=\"Create datatype\" @click=${(e: Event) => this._createDatatype(e)}></uui-button>\r\n</div>\r\n                    </div>\r\n                    <div>\r\n                        <umb-property-editor-ui-tags>\r\n                            <umb-tags-input>\r\n                            <div class=\"wrapper\">\r\n                            </div>\r\n                            </umb-tags-input>\r\n                        </umb-property-editor-ui-tags>\r\n                    </div>\r\n                </uui-box>\r\n                <uui-box class=\"halfWidth\">\r\n                    <h2>Current propagation blocks</h2>\r\n                    <ul>\r\n                    ${this._filteredDocumentTypes.map(\r\n            (doc) => html`\r\n                            <li>\r\n                                <uui-box headline=\"${doc.alias}\" headline-variant=\"h5\">\r\n                                    <p>${doc.name}</p>\r\n                                    <ul>\r\n                                        ${doc.propertyTypes.map(\r\n                (property) => html`<li>${property.name}</li>`\r\n            )}\r\n                                    </ul>\r\n                                </uui-box>\r\n                            </li>\r\n                        `\r\n        )}\r\n                </ul>\r\n                </uui-box>\r\n\r\n               <div class=\"toastification\">\r\n  <uui-toast-notification\r\n    ?open=${this._toastOpen}\r\n    color=${this._toastColor}>\r\n    <uui-toast-notification-layout headline=\"\">\r\n      ${this._toastMessage}\r\n    </uui-toast-notification-layout>\r\n  </uui-toast-notification>\r\n</div>\r\n\r\n\r\n            </div>\r\n        `;\r\n    }\r\n\r\n    static styles = [\r\n        css`\r\n            :host {\r\n                display: block;\r\n                padding: 24px;\r\n            }\r\n\r\n            .section {\r\n                margin-bottom: 24px;\r\n            }\r\n\r\n            .halfWidth {\r\n                width: 49%;\r\n            }\r\n\r\n            .twoColumnLayout {\r\n                display: flex;\r\n                justify-content: space-between;\r\n            }\r\n\r\n            .column{\r\n                display: flex;\r\n                flex-direction: column;\r\n            }\r\n\r\n            .dropdowns{\r\n                display: flex;\r\n                justify-content: space-around;\r\n            }\r\n            \r\n            .mt2{\r\n                margin-top: 1rem;\r\n            }\r\n\r\n            .toastification {\r\n    position: fixed;\r\n    bottom: 20px;\r\n    right: 20px;\r\n    z-index: 1000;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n}\r\n\r\n        `,\r\n    ];\r\n}\r\n\r\nexport default McpsManageDashboardElement;\r\n\r\ndeclare global {\r\n    interface HTMLElementTagNameMap {\r\n        'mcps-manage-dashboard-element': McpsManageDashboardElement;\r\n    }\r\n}\r\n\r\n"],"names":["PropagationRank","DuplicationStrategy","PropagationSetting","params","_modalManagerContext","_datatypeRepository","McpsManageDashboardElement","UmbLitElement","__privateAdd","UmbDataTypeDetailRepository","event","validationError","propagationSetting","apiUrl","res","text","error","UMB_CURRENT_USER_CONTEXT","instance","UMB_MODAL_MANAGER_CONTEXT","__privateSet","currentUser","response","documentTypes","doc","_a","prop","target","picker","pickerString","priority","strategy","missingFields","modalContext","__privateGet","UMB_DATA_TYPE_PICKER_MODAL","value","dt","value2","message","color","html","property","css","__decorateClass","state","query","customElement","McpsManageDashboardElement$1"],"mappings":";;;;;AAAY,IAAAA,sBAAAA,OACRA,EAAA,WAAW,YACXA,EAAA,SAAS,UACTA,EAAA,cAAc,eAHNA,IAAAA,KAAA,CAAA,CAAA,GAMAC,sBAAAA,OACRA,EAAA,aAAa,cACbA,EAAA,kBAAkB,mBAFVA,IAAAA,KAAA,CAAA,CAAA;ACJL,MAAMC,EAAmB;AAAA,EAS5B,YAAYC,GAQT;AACC,SAAK,KAAKA,EAAO,IACjB,KAAK,OAAOA,EAAO,MACd,KAAA,sBAAsBA,EAAO,uBAAuB;AAAA,MACrDH,EAAgB;AAAA,MAChBA,EAAgB;AAAA,MAChBA,EAAgB;AAAA,IACpB,GACK,KAAA,sBAAsBG,EAAO,uBAAuBF,EAAoB,YAC7E,KAAK,eAAeE,EAAO,cAC3B,KAAK,gBAAgBA,EAAO,eAC5B,KAAK,kBAAkBA,EAAO;AAAA,EAAA;AAEtC;;;;;;;gUChCAC,GAAAC;AAkBa,IAAAC,IAAN,cAAyCC,EAAc;AAAA,EAyC1D,cAAc;AACJ,UAAA,GAzCVC,EAAA,MAAAJ,CAAA,GAEsBI,EAAA,MAAAH,GAAA,IAAII,EAA4B,IAAI,CAAA,GAM1D,KAAQ,yBAA0G,CAAC,GAMnH,KAAQ,oBAA8B,CAAC,GAcvC,KAAQ,gBAAwB,IAGhC,KAAQ,cAAqC,YAG7C,KAAQ,aAAsB,IAsJtB,KAAA,kBAAkB,CAACC,MAAkB;AACzC,MAAAA,KAAA,QAAAA,EAAO;AAED,YAAAC,IAAkB,KAAK,gBAAgB;AAC7C,UAAIA,GAAiB;AACZ,aAAA,WAAWA,GAAiB,QAAQ;AACzC;AAAA,MAAA;AAGA,UAAA;AACM,cAAAC,IAAqB,IAAIV,EAAmB;AAAA,UAC9C,MAAM,KAAK,qBAAqB;AAAA,UAChC,qBAAqB,CAAC,KAAK,YAAY,KAAK,aAAa,EAAE,CAAC;AAAA,UAC5D,qBAAqB,KAAK,uBAAuB,KAAK,wBAAwB,EAAE;AAAA,UAChF,cAAc,KAAK;AAAA,UACnB,eAAe,KAAK,qBAAqB;AAAA,QAAA,CAC5C,GAEKW,IAAS,0BAA0B,KAAK,UAAU;AAExD,cAAMA,GAAQ;AAAA,UACV,QAAQ;AAAA,UACR,SAAS;AAAA,YACL,gBAAgB;AAAA,UACpB;AAAA,UACA,MAAM,KAAK,UAAUD,CAAkB;AAAA,QAAA,CAC1C,EACI,KAAK,OAAOE,MAAQ;AACX,gBAAAC,IAAO,MAAMD,EAAI,KAAK;AACxB,cAAA,CAACA,EAAI;AACA,uBAAA,WAAW,6BAA6B,QAAQ,GAC/C,IAAI,MAAM,iBAAiBA,EAAI,MAAM,MAAMC,CAAI,EAAE;AAEtD,eAAA,WAAW,kCAAkC,UAAU;AAAA,QAAA,CAC/D,EACA,MAAM,CAACC,MAAU;AACd,eAAK,WAAW,4BAA4BA,EAAM,OAAO,IAAI,QAAQ;AAAA,QAAA,CACxE;AAAA,eAEAA,GAAO;AACJ,gBAAA,MAAM,wCAAwCA,CAAK;AAAA,MAAA;AAAA,IAEnE,GAxLS,KAAA,eAAeC,GAA0B,CAACC,MAAa;AACxD,WAAK,oBAAoBA,CAAQ;AAAA,IAAA,CACpC,GACI,KAAA,eAAeC,GAA2B,CAACD,MAAa;AACzD,MAAAE,EAAA,MAAKhB,GAAuBc,CAAA;AAAA,IAAA,CAC/B;AAAA,EAAA;AAAA,EAGL,oBAA0B;AACtB,UAAM,kBAAkB,GACxB,KAAK,oBAAoB;AAAA,EAAA;AAAA,EAG7B,MAAc,oBAAoBA,GAAgD;AAC9E,SAAK,QAAQA,EAAS,aAAa,CAACG,MAAgB;AAChD,WAAK,eAAeA,GACf,KAAA,cAAaA,KAAA,gBAAAA,EAAa,UAAS;AAAA,IAAA,CAC3C;AAAA,EAAA;AAAA,EAGL,MAAc,sBAAsB;AAC5B,QAAA;AACM,YAAAC,IAAW,MAAM,MAAM,6BAA6B;AAC1D,UAAIA,EAAS,IAAI;AACP,cAAAC,IAAgB,MAAMD,EAAS,KAAK;AAE1C,aAAK,yBAAyBC,EACzB,OAAO,CAACC,MAAa;;AAAA,kBAAAC,IAAAD,EAAI,UAAJ,gBAAAC,EAAW,cAAc,WAAW;AAAA,SAAO,EAChE,IAAI,CAACD,MAAc;;AAAA;AAAA,YAChB,MAAMA,EAAI;AAAA,YACV,OAAOA,EAAI;AAAA,YACX,iBAAeC,IAAAD,EAAI,kBAAJ,gBAAAC,EAAmB,IAAI,CAACC,OAAe;AAAA,cAClD,MAAMA,EAAK;AAAA,YACf,QAAO,CAAA;AAAA,UAAC;AAAA,SACV;AAAA,MAAA;AAEE,gBAAA,MAAM,mCAAmCJ,EAAS,UAAU;AAAA,aAEnEN,GAAO;AACJ,cAAA,MAAM,kCAAkCA,CAAK;AAAA,IAAA;AAAA,EACzD;AAAA,EAGI,kBAAkBN,GAAc;AACpC,UAAMiB,IAASjB,EAAM;AACrB,SAAK,YAAYiB,EAAO;AAAA,EAAA;AAAA,EAGpB,6BAA6BjB,GAAc;AAC/C,UAAMiB,IAASjB,EAAM;AACrB,SAAK,uBAAuBiB,EAAO;AAAA,EAAA;AAAA,EAG/B,sBAAsBjB,GAAc;AAExC,UAAMkB,IAASlB,EAAM,QACfmB,IAAeD,EAAO;AAExB,IAAAA,KAAUA,EAAO,UACZ,KAAA,oBAAoBC,EAAa,MAAM,GAAG;AAAA,EACnD;AAAA,EAGI,YAAYC,GAAmC;AACnD,YAAQA,GAAU;AAAA,MACd,KAAK;AACD,eAAO9B,EAAgB;AAAA,MAC3B,KAAK;AACD,eAAOA,EAAgB;AAAA,MAC3B,KAAK;AACD,eAAOA,EAAgB;AAAA,MAC3B;AACI,eAAOA,EAAgB;AAAA,IAAA;AAAA,EAC/B;AAAA,EAGI,uBAAuB+B,GAAuC;AAClE,YAAQA,GAAU;AAAA,MACd,KAAK;AACD,eAAO9B,EAAoB;AAAA,MAC/B;AACI,eAAOA,EAAoB;AAAA,IAAA;AAAA,EACnC;AAAA,EAGI,kBAAiC;AACrC,UAAM+B,IAA0B,CAAC;AAe7B,WAbC,KAAK,qBACNA,EAAc,KAAK,UAAU,GAE5B,KAAK,aACNA,EAAc,KAAK,UAAU,GAE5B,KAAK,wBACNA,EAAc,KAAK,sBAAsB,GAExC,KAAK,kBAAkB,UACxBA,EAAc,KAAK,gBAAgB,GAGnCA,EAAc,SAAS,IAChB,kBAAkBA,EAAc,KAAK,IAAI,CAAC,KAG9C;AAAA,EAAA;AAAA,EAIH,aAAa;;AACjB,UAAMC,KAAeR,IAAAS,EAAA,MAAK9B,CAAsB,MAA3B,gBAAAqB,EAA2B,KAAK,MAAMU,GAA4B;AAAA,MACnF,OAAO;AAAA,QACH,MAAM;AAAA,QACN,MAAM;AAAA,MAAA;AAAA,IACV;AAEJ,IAAAF,KAAA,QAAAA,EACM,WACD,KAAK,CAACG,MAAU;AACb,WAAK,cAAcA,EAAM,UAAU,CAAC,EAAG,SAAS;AAChD,UAAIC,IAAKD,EAAM,UAAU,CAAC,EAAG,SAAS;AACtC,MAAAF,EAAA,MAAK7B,GAAoB,gBAAgBgC,CAAE,EACtC,KAAK,CAACC,MAAW;;AACT,aAAA,qBAAoBb,IAAAa,EAAO,SAAP,gBAAAb,EAAa;AAAA,MAAA,CACzC,EACA,MAAM,MAAA;AAAA,OAAe;AAAA,IAAA,GAE7B,MAAM,MAAA;AAAA;AAAA,EAAe;AAAA,EAGtB,WAAWc,GAAiBC,GAA8B;AAC9D,SAAK,gBAAgBD,GACrB,KAAK,cAAcC,GACnB,KAAK,aAAa,IAElB,WAAW,MAAM;AACb,WAAK,aAAa;AAAA,OACnB,GAAI;AAAA,EAAA;AAAA,EAsDX,SAAS;;AACE,WAAAC;AAAA;AAAA,gBAEDhB,IAAA,KAAK,iBAAL,gBAAAA,EAAmB,SAAQ,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2EAYyB,KAAK,qBAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8EAUvB,KAAK,UAAU;AAAA,8CAC/C,KAAK,iBAAiB;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKhD,KAAK,iBAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBASxB,KAAK,4BAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gFAQ6B,CAAC,MAAa,KAAK,gBAAgB,CAAC,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAe/F,KAAK,uBAAuB;AAAA,MACtC,CAACD,MAAQiB;AAAA;AAAA,qDAEgCjB,EAAI,KAAK;AAAA,yCACrBA,EAAI,IAAI;AAAA;AAAA,0CAEPA,EAAI,cAAc;AAAA,QAC5C,CAACkB,MAAaD,QAAWC,EAAS,IAAI;AAAA,MACzC,CAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAKJ,CAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAMG,KAAK,UAAU;AAAA,YACf,KAAK,WAAW;AAAA;AAAA,QAEpB,KAAK,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAA;AAwD1B;AAtXItC,IAAA,oBAAA,QAAA;AAEAC,IAAA,oBAAA,QAAA;AAHSC,EAyUF,SAAS;AAAA,EACZqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA4CJ;AAhXQC,EAAA;AAAA,EADPC,EAAM;AAAA,GALEvC,EAMD,WAAA,gBAAA,CAAA;AAGAsC,EAAA;AAAA,EADPC,EAAM;AAAA,GAREvC,EASD,WAAA,0BAAA,CAAA;AAGAsC,EAAA;AAAA,EADPC,EAAM;AAAA,GAXEvC,EAYD,WAAA,qBAAA,CAAA;AAGAsC,EAAA;AAAA,EADPC,EAAM;AAAA,GAdEvC,EAeD,WAAA,qBAAA,CAAA;AAGAsC,EAAA;AAAA,EADPC,EAAM;AAAA,GAjBEvC,EAkBD,WAAA,eAAA,CAAA;AAEAsC,EAAA;AAAA,EADPC,EAAM;AAAA,GAnBEvC,EAoBD,WAAA,cAAA,CAAA;AAGAsC,EAAA;AAAA,EADPC,EAAM;AAAA,GAtBEvC,EAuBD,WAAA,aAAA,CAAA;AAGAsC,EAAA;AAAA,EADPC,EAAM;AAAA,GAzBEvC,EA0BD,WAAA,wBAAA,CAAA;AAGAsC,EAAA;AAAA,EADPC,EAAM;AAAA,GA5BEvC,EA6BD,WAAA,iBAAA,CAAA;AAGAsC,EAAA;AAAA,EADPC,EAAM;AAAA,GA/BEvC,EAgCD,WAAA,eAAA,CAAA;AAGAsC,EAAA;AAAA,EADPC,EAAM;AAAA,GAlCEvC,EAmCD,WAAA,cAAA,CAAA;AAIAsC,EAAA;AAAA,EADPE,EAAM,6CAA6C;AAAA,GAtC3CxC,EAuCD,WAAA,yBAAA,CAAA;AAvCCA,IAANsC,EAAA;AAAA,EADNG,EAAc,+BAA+B;AAAA,GACjCzC,CAAA;AAyXb,MAAA0C,IAAe1C;"}